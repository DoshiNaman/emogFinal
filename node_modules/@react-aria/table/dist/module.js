import { usePress } from "@react-aria/interactions";
import { useFocusable } from "@react-aria/focus";
import { useCollator, useLocale, useMessageFormatter } from "@react-aria/i18n";
import { useMemo } from "react";
import { mergeProps, useDescription, useId, useUpdateEffect, isAndroid } from "@react-aria/utils";
import { announce } from "@react-aria/live-announcer";
import _babelRuntimeHelpersEsmInteropRequireDefault from "@babel/runtime/helpers/esm/interopRequireDefault";
import _babelRuntimeHelpersEsmExtends from "@babel/runtime/helpers/esm/extends";
import { useGridRowGroup as useTableRowGroup, useGrid, GridKeyboardDelegate, useGridCell, useGridRow, useGridSelectionCheckbox } from "@react-aria/grid";
export { useTableRowGroup };

/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */
const $fd8271485d8e52f870169aca977a9c1$export$gridIds = new WeakMap();

function $fd8271485d8e52f870169aca977a9c1$var$normalizeKey(key) {
  if (typeof key === 'string') {
    return key.replace(/\s*/g, '');
  }

  return '' + key;
}

function $fd8271485d8e52f870169aca977a9c1$export$getColumnHeaderId(state, columnKey) {
  let gridId = $fd8271485d8e52f870169aca977a9c1$export$gridIds.get(state);

  if (!gridId) {
    throw new Error('Unknown grid');
  }

  return gridId + "-" + $fd8271485d8e52f870169aca977a9c1$var$normalizeKey(columnKey);
}

function $fd8271485d8e52f870169aca977a9c1$export$getCellId(state, rowKey, columnKey) {
  let gridId = $fd8271485d8e52f870169aca977a9c1$export$gridIds.get(state);

  if (!gridId) {
    throw new Error('Unknown grid');
  }

  return gridId + "-" + $fd8271485d8e52f870169aca977a9c1$var$normalizeKey(rowKey) + "-" + $fd8271485d8e52f870169aca977a9c1$var$normalizeKey(columnKey);
}

function $fd8271485d8e52f870169aca977a9c1$export$getRowLabelledBy(state, rowKey) {
  // A row is labelled by it's row headers.
  return [...state.collection.rowHeaderColumnKeys].map(columnKey => $fd8271485d8e52f870169aca977a9c1$export$getCellId(state, rowKey, columnKey)).join(' ');
}

class $dabf6db3fde4ddfaf13a80216b120e5f$export$TableKeyboardDelegate extends GridKeyboardDelegate {
  isCell(node) {
    return node.type === 'cell' || node.type === 'rowheader' || node.type === 'column';
  }

  getKeyBelow(key) {
    let startItem = this.collection.getItem(key);

    if (!startItem) {
      return;
    } // If focus was on a column, then focus the first child column if any,
    // or find the corresponding cell in the first row.


    if (startItem.type === 'column') {
      let child = [...startItem.childNodes][0];

      if (child) {
        return child.key;
      }

      let firstItem = this.collection.getItem(this.getFirstKey());
      return [...firstItem.childNodes][startItem.index].key;
    }

    return super.getKeyBelow(key);
  }

  getKeyAbove(key) {
    let startItem = this.collection.getItem(key);

    if (!startItem) {
      return;
    } // If focus was on a column, focus the parent column if any


    if (startItem.type === 'column') {
      let parent = this.collection.getItem(startItem.parentKey);

      if (parent && parent.type === 'column') {
        return parent.key;
      }

      return;
    } // only return above row key if not header row


    let superKey = super.getKeyAbove(key);

    if (superKey && this.collection.getItem(superKey).type !== 'headerrow') {
      return superKey;
    } // If no item was found, and focus was on a cell, then focus the
    // corresponding column header.


    if (this.isCell(startItem)) {
      return this.collection.columns[startItem.index].key;
    } // If focus was on a row, then focus the first column header.


    return this.collection.columns[0].key;
  }

  findNextColumnKey(column) {
    // Search following columns
    let key = this.findNextKey(column.key, item => item.type === 'column');

    if (key != null) {
      return key;
    } // Wrap around to the first column


    let row = this.collection.headerRows[column.level];

    for (let item of row.childNodes) {
      if (item.type === 'column') {
        return item.key;
      }
    }
  }

  findPreviousColumnKey(column) {
    // Search previous columns
    let key = this.findPreviousKey(column.key, item => item.type === 'column');

    if (key != null) {
      return key;
    } // Wrap around to the last column


    let row = this.collection.headerRows[column.level];
    let childNodes = [...row.childNodes];

    for (let i = childNodes.length - 1; i >= 0; i--) {
      let item = childNodes[i];

      if (item.type === 'column') {
        return item.key;
      }
    }
  }

  getKeyRightOf(key) {
    let item = this.collection.getItem(key);

    if (!item) {
      return;
    } // If focus was on a column, then focus the next column


    if (item.type === 'column') {
      return this.direction === 'rtl' ? this.findPreviousColumnKey(item) : this.findNextColumnKey(item);
    }

    return super.getKeyRightOf(key);
  }

  getKeyLeftOf(key) {
    let item = this.collection.getItem(key);

    if (!item) {
      return;
    } // If focus was on a column, then focus the previous column


    if (item.type === 'column') {
      return this.direction === 'rtl' ? this.findNextColumnKey(item) : this.findPreviousColumnKey(item);
    }

    return super.getKeyLeftOf(key);
  }

  getKeyForSearch(search, fromKey) {
    if (!this.collator) {
      return null;
    }

    let collection = this.collection;
    let key = fromKey != null ? fromKey : this.getFirstKey(); // If the starting key is a cell, search from its parent row.

    let startItem = collection.getItem(key);

    if (startItem.type === 'cell') {
      key = startItem.parentKey;
    }

    let hasWrapped = false;

    while (key != null) {
      let item = collection.getItem(key); // Check each of the row header cells in this row for a match

      for (let cell of item.childNodes) {
        let column = collection.columns[cell.index];

        if (collection.rowHeaderColumnKeys.has(column.key) && cell.textValue) {
          let substring = cell.textValue.slice(0, search.length);

          if (this.collator.compare(substring, search) === 0) {
            // If we started on a cell, end on the matching cell. Otherwise, end on the row.
            let fromItem = fromKey != null ? collection.getItem(fromKey) : startItem;
            return fromItem.type === 'cell' ? cell.key : item.key;
          }
        }
      }

      key = this.getKeyBelow(key); // Wrap around when reaching the end of the collection

      if (key == null && !hasWrapped) {
        key = this.getFirstKey();
        hasWrapped = true;
      }
    }

    return null;
  }

}

// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/ar-AE.json
var $eeb22d73391416261d5896c11e3d50e$exports = {};
$eeb22d73391416261d5896c11e3d50e$exports = JSON.parse("{\"ascending\":\"تصاعدي\",\"ascendingSort\":\"ترتيب حسب العمود {columnName} بترتيب تصاعدي\",\"descending\":\"تنازلي\",\"descendingSort\":\"ترتيب حسب العمود {columnName} بترتيب تنازلي\",\"select\":\"تحديد\",\"selectAll\":\"تحديد الكل\",\"sortable\":\"عمود قابل للترتيب\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/bg-BG.json
var $fa0ca9814ea3b12fba24314370$exports = {};
$fa0ca9814ea3b12fba24314370$exports = JSON.parse("{\"ascending\":\"възходящ\",\"ascendingSort\":\"сортирано по колона {columnName} във възходящ ред\",\"descending\":\"низходящ\",\"descendingSort\":\"сортирано по колона {columnName} в низходящ ред\",\"select\":\"Изберете\",\"selectAll\":\"Изберете всичко\",\"sortable\":\"сортираща колона\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/cs-CZ.json
var $b80ce4b4c86bf3ffea578b4830e9bd5b$exports = {};
$b80ce4b4c86bf3ffea578b4830e9bd5b$exports = JSON.parse("{\"ascending\":\"vzestupně\",\"ascendingSort\":\"řazeno vzestupně podle sloupce {columnName}\",\"descending\":\"sestupně\",\"descendingSort\":\"řazeno sestupně podle sloupce {columnName}\",\"select\":\"Vybrat\",\"selectAll\":\"Vybrat vše\",\"sortable\":\"sloupec s možností řazení\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/da-DK.json
var $f8703fccb3f936bbb6d4446343295bc$exports = {};
$f8703fccb3f936bbb6d4446343295bc$exports = JSON.parse("{\"ascending\":\"stigende\",\"ascendingSort\":\"sorteret efter kolonne {columnName} i stigende rækkefølge\",\"descending\":\"faldende\",\"descendingSort\":\"sorteret efter kolonne {columnName} i faldende rækkefølge\",\"select\":\"Vælg\",\"selectAll\":\"Vælg alle\",\"sortable\":\"sorterbar kolonne\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/de-DE.json
var $a1a2d26509424350c19569463ac338$exports = {};
$a1a2d26509424350c19569463ac338$exports = JSON.parse("{\"ascending\":\"aufsteigend\",\"ascendingSort\":\"sortiert nach Spalte {columnName} in aufsteigender Reihenfolge\",\"descending\":\"absteigend\",\"descendingSort\":\"sortiert nach Spalte {columnName} in absteigender Reihenfolge\",\"select\":\"Auswählen\",\"selectAll\":\"Alles auswählen\",\"sortable\":\"sortierbare Spalte\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/el-GR.json
var $bec6f1ec38b0850d030a38bcf7db$exports = {};
$bec6f1ec38b0850d030a38bcf7db$exports = JSON.parse("{\"ascending\":\"αύξουσα\",\"ascendingSort\":\"διαλογή ανά στήλη {columnName} σε αύξουσα σειρά\",\"descending\":\"φθίνουσα\",\"descendingSort\":\"διαλογή ανά στήλη {columnName} σε φθίνουσα σειρά\",\"select\":\"Επιλογή\",\"selectAll\":\"Επιλογή όλων\",\"sortable\":\"Στήλη διαλογής\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/en-US.json
var $d500688bbd18d209e8dc63a4586858a1$exports = {};
$d500688bbd18d209e8dc63a4586858a1$exports = JSON.parse("{\"select\":\"Select\",\"selectAll\":\"Select All\",\"sortable\":\"sortable column\",\"ascending\":\"ascending\",\"descending\":\"descending\",\"ascendingSort\":\"sorted by column {columnName} in ascending order\",\"descendingSort\":\"sorted by column {columnName} in descending order\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/es-ES.json
var $e20050aa18c4f5920be25586b9$exports = {};
$e20050aa18c4f5920be25586b9$exports = JSON.parse("{\"ascending\":\"de subida\",\"ascendingSort\":\"ordenado por columna {columnName} en orden de subida\",\"descending\":\"de bajada\",\"descendingSort\":\"ordenado por columna {columnName} en orden de bajada\",\"select\":\"Seleccionar\",\"selectAll\":\"Seleccionar todos\",\"sortable\":\"columna ordenable\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/et-EE.json
var $f4962b42f94764add77fdce85fa673e$exports = {};
$f4962b42f94764add77fdce85fa673e$exports = JSON.parse("{\"ascending\":\"tõusev järjestus\",\"ascendingSort\":\"sorditud veeru järgi {columnName} tõusvas järjestuses\",\"descending\":\"laskuv järjestus\",\"descendingSort\":\"sorditud veeru järgi {columnName} laskuvas järjestuses\",\"select\":\"Vali\",\"selectAll\":\"Vali kõik\",\"sortable\":\"sorditav veerg\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/fi-FI.json
var $df17269a3e52e7316d1e1d297d12d66a$exports = {};
$df17269a3e52e7316d1e1d297d12d66a$exports = JSON.parse("{\"ascending\":\"nouseva\",\"ascendingSort\":\"lajiteltu sarakkeen {columnName} mukaan nousevassa järjestyksessä\",\"descending\":\"laskeva\",\"descendingSort\":\"lajiteltu sarakkeen {columnName} mukaan laskevassa järjestyksessä\",\"select\":\"Valitse\",\"selectAll\":\"Valitse kaikki\",\"sortable\":\"lajiteltava sarake\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/fr-FR.json
var $e82ea2755617047da4773a734e02b$exports = {};
$e82ea2755617047da4773a734e02b$exports = JSON.parse("{\"ascending\":\"croissant\",\"ascendingSort\":\"trié en fonction de la colonne {columnName} par ordre croissant\",\"descending\":\"décroissant\",\"descendingSort\":\"trié en fonction de la colonne {columnName} par ordre décroissant\",\"select\":\"Sélectionner\",\"selectAll\":\"Sélectionner tout\",\"sortable\":\"colonne triable\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/he-IL.json
var $b1608dad8de71190a5ad2359bf9e33$exports = {};
$b1608dad8de71190a5ad2359bf9e33$exports = JSON.parse("{\"ascending\":\"עולה\",\"ascendingSort\":\"מוין לפי עמודה {columnName} בסדר עולה\",\"descending\":\"יורד\",\"descendingSort\":\"מוין לפי עמודה {columnName} בסדר יורד\",\"select\":\"בחר\",\"selectAll\":\"בחר הכול\",\"sortable\":\"עמודה שניתן למיין\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/hr-HR.json
var $eba9927d54a5f380c7f03b78d05786aa$exports = {};
$eba9927d54a5f380c7f03b78d05786aa$exports = JSON.parse("{\"ascending\":\"rastući\",\"ascendingSort\":\"razvrstano po stupcima {columnName} rastućem redoslijedom\",\"descending\":\"padajući\",\"descendingSort\":\"razvrstano po stupcima {columnName} padajućim redoslijedom\",\"select\":\"Odaberite\",\"selectAll\":\"Odaberite sve\",\"sortable\":\"stupac koji se može razvrstati\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/hu-HU.json
var $cb0b1adc37bae4af50793b778e2108a6$exports = {};
$cb0b1adc37bae4af50793b778e2108a6$exports = JSON.parse("{\"ascending\":\"növekvő\",\"ascendingSort\":\"rendezve a(z) {columnName} oszlop szerint, növekvő sorrendben\",\"descending\":\"csökkenő\",\"descendingSort\":\"rendezve a(z) {columnName} oszlop szerint, csökkenő sorrendben\",\"select\":\"Kijelölés\",\"selectAll\":\"Összes kijelölése\",\"sortable\":\"rendezendő oszlop\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/it-IT.json
var $afb077696550f3b7e0dcee652c2814ed$exports = {};
$afb077696550f3b7e0dcee652c2814ed$exports = JSON.parse("{\"ascending\":\"crescente\",\"ascendingSort\":\"in ordine crescente in base alla colonna {columnName}\",\"descending\":\"decrescente\",\"descendingSort\":\"in ordine decrescente in base alla colonna {columnName}\",\"select\":\"Seleziona\",\"selectAll\":\"Seleziona tutto\",\"sortable\":\"colonna ordinabile\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/ja-JP.json
var $bf0d1bbc15981ecf1d7062dedf93c2$exports = {};
$bf0d1bbc15981ecf1d7062dedf93c2$exports = JSON.parse("{\"ascending\":\"昇順\",\"ascendingSort\":\"列 {columnName} を昇順で並べ替え\",\"descending\":\"降順\",\"descendingSort\":\"列 {columnName} を降順で並べ替え\",\"select\":\"選択\",\"selectAll\":\"すべて選択\",\"sortable\":\"並べ替え可能な列\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/ko-KR.json
var $dc136dabff22b6b7a44de4fb587f1a11$exports = {};
$dc136dabff22b6b7a44de4fb587f1a11$exports = JSON.parse("{\"ascending\":\"오름차순\",\"ascendingSort\":\"{columnName} 열을 기준으로 오름차순으로 정렬됨\",\"descending\":\"내림차순\",\"descendingSort\":\"{columnName} 열을 기준으로 내림차순으로 정렬됨\",\"select\":\"선택\",\"selectAll\":\"모두 선택\",\"sortable\":\"정렬 가능한 열\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/lt-LT.json
var $fc42de8ccef0faf18e4367afc6b7113$exports = {};
$fc42de8ccef0faf18e4367afc6b7113$exports = JSON.parse("{\"ascending\":\"didėjančia tvarka\",\"ascendingSort\":\"surikiuota pagal stulpelį {columnName} didėjančia tvarka\",\"descending\":\"mažėjančia tvarka\",\"descendingSort\":\"surikiuota pagal stulpelį {columnName} mažėjančia tvarka\",\"select\":\"Pasirinkti\",\"selectAll\":\"Pasirinkti viską\",\"sortable\":\"rikiuojamas stulpelis\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/lv-LV.json
var $b865ab10f15e1da88c3a3a684709f7$exports = {};
$b865ab10f15e1da88c3a3a684709f7$exports = JSON.parse("{\"ascending\":\"augošā secībā\",\"ascendingSort\":\"kārtots pēc kolonnas {columnName} augošā secībā\",\"descending\":\"dilstošā secībā\",\"descendingSort\":\"kārtots pēc kolonnas {columnName} dilstošā secībā\",\"select\":\"Atlasīt\",\"selectAll\":\"Atlasīt visu\",\"sortable\":\"kārtojamā kolonna\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/nb-NO.json
var $c7866351d85f757b0f58566bf2c68748$exports = {};
$c7866351d85f757b0f58566bf2c68748$exports = JSON.parse("{\"ascending\":\"stigende\",\"ascendingSort\":\"sortert etter kolonne {columnName} i stigende rekkefølge\",\"descending\":\"synkende\",\"descendingSort\":\"sortert etter kolonne {columnName} i synkende rekkefølge\",\"select\":\"Velg\",\"selectAll\":\"Velg alle\",\"sortable\":\"kolonne som kan sorteres\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/nl-NL.json
var $df753aa2fbc2a27fbf427886dd55155$exports = {};
$df753aa2fbc2a27fbf427886dd55155$exports = JSON.parse("{\"ascending\":\"oplopend\",\"ascendingSort\":\"gesorteerd in oplopende volgorde in kolom {columnName}\",\"descending\":\"aflopend\",\"descendingSort\":\"gesorteerd in aflopende volgorde in kolom {columnName}\",\"select\":\"Selecteren\",\"selectAll\":\"Alles selecteren\",\"sortable\":\"sorteerbare kolom\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/pl-PL.json
var $a79109898fc21f9f1ee17a9$exports = {};
$a79109898fc21f9f1ee17a9$exports = JSON.parse("{\"ascending\":\"rosnąco\",\"ascendingSort\":\"posortowano według kolumny {columnName} w porządku rosnącym\",\"descending\":\"malejąco\",\"descendingSort\":\"posortowano według kolumny {columnName} w porządku malejącym\",\"select\":\"Zaznacz\",\"selectAll\":\"Zaznacz wszystko\",\"sortable\":\"kolumna z możliwością sortowania\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/pt-BR.json
var $c5906e4f561b7b47a7004651d0d55ea$exports = {};
$c5906e4f561b7b47a7004651d0d55ea$exports = JSON.parse("{\"ascending\":\"crescente\",\"ascendingSort\":\"classificado pela coluna {columnName} em ordem crescente\",\"descending\":\"decrescente\",\"descendingSort\":\"classificado pela coluna {columnName} em ordem decrescente\",\"select\":\"Selecionar\",\"selectAll\":\"Selecionar tudo\",\"sortable\":\"coluna classificável\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/pt-PT.json
var $fe13a3ddbc2699563319ab6e208dd9$exports = {};
$fe13a3ddbc2699563319ab6e208dd9$exports = JSON.parse("{\"ascending\":\"ascendente\",\"ascendingSort\":\"Ordenar por coluna {columnName} em ordem ascendente\",\"descending\":\"descendente\",\"descendingSort\":\"Ordenar por coluna {columnName} em ordem descendente\",\"select\":\"Selecionar\",\"selectAll\":\"Selecionar tudo\",\"sortable\":\"Coluna ordenável\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/ro-RO.json
var $f61b1759648a2ce080048699cf77$exports = {};
$f61b1759648a2ce080048699cf77$exports = JSON.parse("{\"ascending\":\"crescătoare\",\"ascendingSort\":\"sortate după coloana {columnName} în ordine crescătoare\",\"descending\":\"descrescătoare\",\"descendingSort\":\"sortate după coloana {columnName} în ordine descrescătoare\",\"select\":\"Selectare\",\"selectAll\":\"Selectare totală\",\"sortable\":\"coloană sortabilă\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/ru-RU.json
var $dddc1f59faf50dd794c3728b6f6a491$exports = {};
$dddc1f59faf50dd794c3728b6f6a491$exports = JSON.parse("{\"ascending\":\"возрастание\",\"ascendingSort\":\"сортировать столбец {columnName} в порядке возрастания\",\"descending\":\"убывание\",\"descendingSort\":\"сортировать столбец {columnName} в порядке убывания\",\"select\":\"Выбрать\",\"selectAll\":\"Выбрать все\",\"sortable\":\"сортируемый столбец\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/sk-SK.json
var $fb47d7d560830a4fcf06abc651a18141$exports = {};
$fb47d7d560830a4fcf06abc651a18141$exports = JSON.parse("{\"ascending\":\"vzostupne\",\"ascendingSort\":\"zoradené zostupne podľa stĺpca {columnName}\",\"descending\":\"zostupne\",\"descendingSort\":\"zoradené zostupne podľa stĺpca {columnName}\",\"select\":\"Vybrať\",\"selectAll\":\"Vybrať všetko\",\"sortable\":\"zoraditeľný stĺpec\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/sl-SI.json
var $b4a15520baa1794862d1bad05b5e4e34$exports = {};
$b4a15520baa1794862d1bad05b5e4e34$exports = JSON.parse("{\"ascending\":\"naraščajoče\",\"ascendingSort\":\"razvrščeno po stolpcu {columnName} v naraščajočem vrstnem redu\",\"descending\":\"padajoče\",\"descendingSort\":\"razvrščeno po stolpcu {columnName} v padajočem vrstnem redu\",\"select\":\"Izberite\",\"selectAll\":\"Izberite vse\",\"sortable\":\"razvrstljivi stolpec\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/sr-SP.json
var $a3b85c35d8db74bade6cb378eed15$exports = {};
$a3b85c35d8db74bade6cb378eed15$exports = JSON.parse("{\"ascending\":\"rastući\",\"ascendingSort\":\"sortirano po kolonama {columnName} rastućim redosledom\",\"descending\":\"padajući\",\"descendingSort\":\"sortirano po kolonama {columnName} padajućim redosledom\",\"select\":\"Izaberite\",\"selectAll\":\"Izaberite sve\",\"sortable\":\"kolona koja se može sortirati\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/sv-SE.json
var $abee331c4b5db2f7f481965f4b64ce$exports = {};
$abee331c4b5db2f7f481965f4b64ce$exports = JSON.parse("{\"ascending\":\"stigande\",\"ascendingSort\":\"sorterat på kolumn {columnName} i stigande ordning\",\"descending\":\"fallande\",\"descendingSort\":\"sorterat på kolumn {columnName} i fallande ordning\",\"select\":\"Markera\",\"selectAll\":\"Markera allt\",\"sortable\":\"sorterbar kolumn\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/tr-TR.json
var $afaac376a1c1615a63ade428820f04bd$exports = {};
$afaac376a1c1615a63ade428820f04bd$exports = JSON.parse("{\"ascending\":\"artan sırada\",\"ascendingSort\":\"{columnName} sütuna göre artan düzende sırala\",\"descending\":\"azalan sırada\",\"descendingSort\":\"{columnName} sütuna göre azalan düzende sırala\",\"select\":\"Seç\",\"selectAll\":\"Tümünü Seç\",\"sortable\":\"Sıralanabilir sütun\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/uk-UA.json
var $d9b08bc61b03f2138ed9b56aa161f0a3$exports = {};
$d9b08bc61b03f2138ed9b56aa161f0a3$exports = JSON.parse("{\"ascending\":\"висхідний\",\"ascendingSort\":\"відсортовано за стовпцем {columnName} у висхідному порядку\",\"descending\":\"низхідний\",\"descendingSort\":\"відсортовано за стовпцем {columnName} у низхідному порядку\",\"select\":\"Вибрати\",\"selectAll\":\"Вибрати все\",\"sortable\":\"сортувальний стовпець\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/zh-CN.json
var $a20d09c83504027698611a275ce1$exports = {};
$a20d09c83504027698611a275ce1$exports = JSON.parse("{\"ascending\":\"升序\",\"ascendingSort\":\"按列 {columnName} 升序排序\",\"descending\":\"降序\",\"descendingSort\":\"按列 {columnName} 降序排序\",\"select\":\"选择\",\"selectAll\":\"全选\",\"sortable\":\"可排序的列\"}");
// ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-aria/table/intl/zh-TW.json
var $c03eb0fa5ad03617e9f10edd7277$exports = {};
$c03eb0fa5ad03617e9f10edd7277$exports = JSON.parse("{\"ascending\":\"遞增\",\"ascendingSort\":\"已依據「{columnName}」欄遞增排序\",\"descending\":\"遞減\",\"descendingSort\":\"已依據「{columnName}」欄遞減排序\",\"select\":\"選取\",\"selectAll\":\"全選\",\"sortable\":\"可排序的欄\"}");
// @ts-ignore
const $a800876f3cda89a04f3222619275fc$var$intlMessages = {
  "ar-AE": _babelRuntimeHelpersEsmInteropRequireDefault($eeb22d73391416261d5896c11e3d50e$exports).default,
  "bg-BG": _babelRuntimeHelpersEsmInteropRequireDefault($fa0ca9814ea3b12fba24314370$exports).default,
  "cs-CZ": _babelRuntimeHelpersEsmInteropRequireDefault($b80ce4b4c86bf3ffea578b4830e9bd5b$exports).default,
  "da-DK": _babelRuntimeHelpersEsmInteropRequireDefault($f8703fccb3f936bbb6d4446343295bc$exports).default,
  "de-DE": _babelRuntimeHelpersEsmInteropRequireDefault($a1a2d26509424350c19569463ac338$exports).default,
  "el-GR": _babelRuntimeHelpersEsmInteropRequireDefault($bec6f1ec38b0850d030a38bcf7db$exports).default,
  "en-US": _babelRuntimeHelpersEsmInteropRequireDefault($d500688bbd18d209e8dc63a4586858a1$exports).default,
  "es-ES": _babelRuntimeHelpersEsmInteropRequireDefault($e20050aa18c4f5920be25586b9$exports).default,
  "et-EE": _babelRuntimeHelpersEsmInteropRequireDefault($f4962b42f94764add77fdce85fa673e$exports).default,
  "fi-FI": _babelRuntimeHelpersEsmInteropRequireDefault($df17269a3e52e7316d1e1d297d12d66a$exports).default,
  "fr-FR": _babelRuntimeHelpersEsmInteropRequireDefault($e82ea2755617047da4773a734e02b$exports).default,
  "he-IL": _babelRuntimeHelpersEsmInteropRequireDefault($b1608dad8de71190a5ad2359bf9e33$exports).default,
  "hr-HR": _babelRuntimeHelpersEsmInteropRequireDefault($eba9927d54a5f380c7f03b78d05786aa$exports).default,
  "hu-HU": _babelRuntimeHelpersEsmInteropRequireDefault($cb0b1adc37bae4af50793b778e2108a6$exports).default,
  "it-IT": _babelRuntimeHelpersEsmInteropRequireDefault($afb077696550f3b7e0dcee652c2814ed$exports).default,
  "ja-JP": _babelRuntimeHelpersEsmInteropRequireDefault($bf0d1bbc15981ecf1d7062dedf93c2$exports).default,
  "ko-KR": _babelRuntimeHelpersEsmInteropRequireDefault($dc136dabff22b6b7a44de4fb587f1a11$exports).default,
  "lt-LT": _babelRuntimeHelpersEsmInteropRequireDefault($fc42de8ccef0faf18e4367afc6b7113$exports).default,
  "lv-LV": _babelRuntimeHelpersEsmInteropRequireDefault($b865ab10f15e1da88c3a3a684709f7$exports).default,
  "nb-NO": _babelRuntimeHelpersEsmInteropRequireDefault($c7866351d85f757b0f58566bf2c68748$exports).default,
  "nl-NL": _babelRuntimeHelpersEsmInteropRequireDefault($df753aa2fbc2a27fbf427886dd55155$exports).default,
  "pl-PL": _babelRuntimeHelpersEsmInteropRequireDefault($a79109898fc21f9f1ee17a9$exports).default,
  "pt-BR": _babelRuntimeHelpersEsmInteropRequireDefault($c5906e4f561b7b47a7004651d0d55ea$exports).default,
  "pt-PT": _babelRuntimeHelpersEsmInteropRequireDefault($fe13a3ddbc2699563319ab6e208dd9$exports).default,
  "ro-RO": _babelRuntimeHelpersEsmInteropRequireDefault($f61b1759648a2ce080048699cf77$exports).default,
  "ru-RU": _babelRuntimeHelpersEsmInteropRequireDefault($dddc1f59faf50dd794c3728b6f6a491$exports).default,
  "sk-SK": _babelRuntimeHelpersEsmInteropRequireDefault($fb47d7d560830a4fcf06abc651a18141$exports).default,
  "sl-SI": _babelRuntimeHelpersEsmInteropRequireDefault($b4a15520baa1794862d1bad05b5e4e34$exports).default,
  "sr-SP": _babelRuntimeHelpersEsmInteropRequireDefault($a3b85c35d8db74bade6cb378eed15$exports).default,
  "sv-SE": _babelRuntimeHelpersEsmInteropRequireDefault($abee331c4b5db2f7f481965f4b64ce$exports).default,
  "tr-TR": _babelRuntimeHelpersEsmInteropRequireDefault($afaac376a1c1615a63ade428820f04bd$exports).default,
  "uk-UA": _babelRuntimeHelpersEsmInteropRequireDefault($d9b08bc61b03f2138ed9b56aa161f0a3$exports).default,
  "zh-CN": _babelRuntimeHelpersEsmInteropRequireDefault($a20d09c83504027698611a275ce1$exports).default,
  "zh-TW": _babelRuntimeHelpersEsmInteropRequireDefault($c03eb0fa5ad03617e9f10edd7277$exports).default
};

/**
 * Provides the behavior and accessibility implementation for a table component.
 * A table displays data in rows and columns and enables a user to navigate its contents via directional navigation keys,
 * and optionally supports row selection and sorting.
 * @param props - Props for the table.
 * @param state - State for the table, as returned by `useTableState`.
 * @param ref - The ref attached to the table element.
 */
export function useTable(props, state, ref) {
  let {
    keyboardDelegate,
    isVirtualized,
    layout
  } = props; // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).
  // When virtualized, the layout object will be passed in as a prop and override this.

  let collator = useCollator({
    usage: 'search',
    sensitivity: 'base'
  });
  let {
    direction
  } = useLocale();
  let delegate = useMemo(() => keyboardDelegate || new $dabf6db3fde4ddfaf13a80216b120e5f$export$TableKeyboardDelegate({
    collection: state.collection,
    disabledKeys: state.disabledKeys,
    ref,
    direction,
    collator,
    layout
  }), [keyboardDelegate, state.collection, state.disabledKeys, ref, direction, collator, layout]);
  let id = useId();
  $fd8271485d8e52f870169aca977a9c1$export$gridIds.set(state, id);
  let {
    gridProps
  } = useGrid(_babelRuntimeHelpersEsmExtends({}, props, {
    id,
    keyboardDelegate: delegate,

    getRowText(key) {
      let added = state.collection.getItem(key); // If the row has a textValue, use that.

      if (added.textValue != null) {
        return added.textValue;
      } // Otherwise combine the text of each of the row header columns.


      let rowHeaderColumnKeys = state.collection.rowHeaderColumnKeys;

      if (rowHeaderColumnKeys) {
        let text = [];

        for (let cell of added.childNodes) {
          let column = state.collection.columns[cell.index];

          if (rowHeaderColumnKeys.has(column.key) && cell.textValue) {
            text.push(cell.textValue);
          }

          if (text.length === rowHeaderColumnKeys.size) {
            break;
          }
        }

        return text.join(' ');
      }

      return '';
    }

  }), state, ref); // Override to include header rows

  if (isVirtualized) {
    gridProps['aria-rowcount'] = state.collection.size + state.collection.headerRows.length;
  }

  let {
    column,
    direction: sortDirection
  } = state.sortDescriptor || {};
  let formatMessage = useMessageFormatter($a800876f3cda89a04f3222619275fc$var$intlMessages);
  let sortDescription = useMemo(() => {
    var _state$collection$col;

    let columnName = (_state$collection$col = state.collection.columns.find(c => c.key === column)) == null ? void 0 : _state$collection$col.textValue;
    return sortDirection && column ? formatMessage(sortDirection + "Sort", {
      columnName
    }) : undefined;
  }, [sortDirection, column, state.collection.columns]);
  let descriptionProps = useDescription(sortDescription); // Only announce after initial render, tabbing to the table will tell you the initial sort info already

  useUpdateEffect(() => {
    announce(sortDescription, 'assertive', 500);
  }, [sortDescription]);
  return {
    gridProps: mergeProps(gridProps, descriptionProps)
  };
}
// @ts-ignore
const $e89e39d65ad75fce5ad981455ebf32a$var$intlMessages = {
  "ar-AE": _babelRuntimeHelpersEsmInteropRequireDefault($eeb22d73391416261d5896c11e3d50e$exports).default,
  "bg-BG": _babelRuntimeHelpersEsmInteropRequireDefault($fa0ca9814ea3b12fba24314370$exports).default,
  "cs-CZ": _babelRuntimeHelpersEsmInteropRequireDefault($b80ce4b4c86bf3ffea578b4830e9bd5b$exports).default,
  "da-DK": _babelRuntimeHelpersEsmInteropRequireDefault($f8703fccb3f936bbb6d4446343295bc$exports).default,
  "de-DE": _babelRuntimeHelpersEsmInteropRequireDefault($a1a2d26509424350c19569463ac338$exports).default,
  "el-GR": _babelRuntimeHelpersEsmInteropRequireDefault($bec6f1ec38b0850d030a38bcf7db$exports).default,
  "en-US": _babelRuntimeHelpersEsmInteropRequireDefault($d500688bbd18d209e8dc63a4586858a1$exports).default,
  "es-ES": _babelRuntimeHelpersEsmInteropRequireDefault($e20050aa18c4f5920be25586b9$exports).default,
  "et-EE": _babelRuntimeHelpersEsmInteropRequireDefault($f4962b42f94764add77fdce85fa673e$exports).default,
  "fi-FI": _babelRuntimeHelpersEsmInteropRequireDefault($df17269a3e52e7316d1e1d297d12d66a$exports).default,
  "fr-FR": _babelRuntimeHelpersEsmInteropRequireDefault($e82ea2755617047da4773a734e02b$exports).default,
  "he-IL": _babelRuntimeHelpersEsmInteropRequireDefault($b1608dad8de71190a5ad2359bf9e33$exports).default,
  "hr-HR": _babelRuntimeHelpersEsmInteropRequireDefault($eba9927d54a5f380c7f03b78d05786aa$exports).default,
  "hu-HU": _babelRuntimeHelpersEsmInteropRequireDefault($cb0b1adc37bae4af50793b778e2108a6$exports).default,
  "it-IT": _babelRuntimeHelpersEsmInteropRequireDefault($afb077696550f3b7e0dcee652c2814ed$exports).default,
  "ja-JP": _babelRuntimeHelpersEsmInteropRequireDefault($bf0d1bbc15981ecf1d7062dedf93c2$exports).default,
  "ko-KR": _babelRuntimeHelpersEsmInteropRequireDefault($dc136dabff22b6b7a44de4fb587f1a11$exports).default,
  "lt-LT": _babelRuntimeHelpersEsmInteropRequireDefault($fc42de8ccef0faf18e4367afc6b7113$exports).default,
  "lv-LV": _babelRuntimeHelpersEsmInteropRequireDefault($b865ab10f15e1da88c3a3a684709f7$exports).default,
  "nb-NO": _babelRuntimeHelpersEsmInteropRequireDefault($c7866351d85f757b0f58566bf2c68748$exports).default,
  "nl-NL": _babelRuntimeHelpersEsmInteropRequireDefault($df753aa2fbc2a27fbf427886dd55155$exports).default,
  "pl-PL": _babelRuntimeHelpersEsmInteropRequireDefault($a79109898fc21f9f1ee17a9$exports).default,
  "pt-BR": _babelRuntimeHelpersEsmInteropRequireDefault($c5906e4f561b7b47a7004651d0d55ea$exports).default,
  "pt-PT": _babelRuntimeHelpersEsmInteropRequireDefault($fe13a3ddbc2699563319ab6e208dd9$exports).default,
  "ro-RO": _babelRuntimeHelpersEsmInteropRequireDefault($f61b1759648a2ce080048699cf77$exports).default,
  "ru-RU": _babelRuntimeHelpersEsmInteropRequireDefault($dddc1f59faf50dd794c3728b6f6a491$exports).default,
  "sk-SK": _babelRuntimeHelpersEsmInteropRequireDefault($fb47d7d560830a4fcf06abc651a18141$exports).default,
  "sl-SI": _babelRuntimeHelpersEsmInteropRequireDefault($b4a15520baa1794862d1bad05b5e4e34$exports).default,
  "sr-SP": _babelRuntimeHelpersEsmInteropRequireDefault($a3b85c35d8db74bade6cb378eed15$exports).default,
  "sv-SE": _babelRuntimeHelpersEsmInteropRequireDefault($abee331c4b5db2f7f481965f4b64ce$exports).default,
  "tr-TR": _babelRuntimeHelpersEsmInteropRequireDefault($afaac376a1c1615a63ade428820f04bd$exports).default,
  "uk-UA": _babelRuntimeHelpersEsmInteropRequireDefault($d9b08bc61b03f2138ed9b56aa161f0a3$exports).default,
  "zh-CN": _babelRuntimeHelpersEsmInteropRequireDefault($a20d09c83504027698611a275ce1$exports).default,
  "zh-TW": _babelRuntimeHelpersEsmInteropRequireDefault($c03eb0fa5ad03617e9f10edd7277$exports).default
};

/**
 * Provides the behavior and accessibility implementation for a column header in a table.
 * @param props - Props for the column header.
 * @param state - State of the table, as returned by `useTableState`.
 * @param ref - The ref attached to the column header element.
 */
export function useTableColumnHeader(props, state, ref) {
  var _state$sortDescriptor, _state$sortDescriptor2;

  let {
    node
  } = props;
  let allowsSorting = node.props.allowsSorting;
  let {
    gridCellProps
  } = useGridCell(props, state, ref);
  let isSelectionCellDisabled = node.props.isSelectionCell && state.selectionManager.selectionMode === 'single';
  let {
    pressProps
  } = usePress({
    isDisabled: !allowsSorting || isSelectionCellDisabled,

    onPress() {
      state.sort(node.key);
    }

  }); // Needed to pick up the focusable context, enabling things like Tooltips for example

  let {
    focusableProps
  } = useFocusable({}, ref);
  let ariaSort = null;
  let isSortedColumn = ((_state$sortDescriptor = state.sortDescriptor) == null ? void 0 : _state$sortDescriptor.column) === node.key;
  let sortDirection = (_state$sortDescriptor2 = state.sortDescriptor) == null ? void 0 : _state$sortDescriptor2.direction; // aria-sort not supported in Android Talkback

  if (node.props.allowsSorting && !isAndroid()) {
    ariaSort = isSortedColumn ? sortDirection : 'none';
  }

  let formatMessage = useMessageFormatter($e89e39d65ad75fce5ad981455ebf32a$var$intlMessages);
  let sortDescription;

  if (allowsSorting) {
    sortDescription = "" + formatMessage('sortable'); // Android Talkback doesn't support aria-sort so we add sort order details to the aria-described by here

    if (isSortedColumn && sortDirection && isAndroid()) {
      sortDescription = sortDescription + ", " + formatMessage(sortDirection);
    }
  }

  let descriptionProps = useDescription(sortDescription);
  return {
    columnHeaderProps: _babelRuntimeHelpersEsmExtends({}, mergeProps(gridCellProps, pressProps, focusableProps, descriptionProps), {
      role: 'columnheader',
      id: $fd8271485d8e52f870169aca977a9c1$export$getColumnHeaderId(state, node.key),
      'aria-colspan': node.colspan && node.colspan > 1 ? node.colspan : null,
      'aria-sort': ariaSort
    })
  };
}

/**
 * Provides the behavior and accessibility implementation for a row in a table.
 * @param props - Props for the row.
 * @param state - State of the table, as returned by `useTableState`.
 */
export function useTableRow(props, state, ref) {
  let {
    node
  } = props;
  let {
    rowProps
  } = useGridRow(props, state, ref);
  return {
    rowProps: _babelRuntimeHelpersEsmExtends({}, rowProps, {
      'aria-labelledby': $fd8271485d8e52f870169aca977a9c1$export$getRowLabelledBy(state, node.key)
    })
  };
}

/**
 * Provides the behavior and accessibility implementation for a header row in a table.
 * @param props - Props for the row.
 * @param state - State of the table, as returned by `useTableState`.
 */
// eslint-disable-next-line @typescript-eslint/no-unused-vars
export function useTableHeaderRow(props, state, ref) {
  let {
    node,
    isVirtualized
  } = props;
  let rowProps = {
    role: 'row'
  };

  if (isVirtualized) {
    rowProps['aria-rowindex'] = node.index + 1; // aria-rowindex is 1 based
  }

  return {
    rowProps
  };
}

/**
 * Provides the behavior and accessibility implementation for a cell in a table.
 * @param props - Props for the cell.
 * @param state - State of the table, as returned by `useTableState`.
 * @param ref - The ref attached to the cell element.
 */
export function useTableCell(props, state, ref) {
  let {
    gridCellProps
  } = useGridCell(props, state, ref);
  let columnKey = props.node.column.key;

  if (state.collection.rowHeaderColumnKeys.has(columnKey)) {
    gridCellProps.role = 'rowheader';
    gridCellProps.id = $fd8271485d8e52f870169aca977a9c1$export$getCellId(state, props.node.parentKey, columnKey);
  }

  return {
    gridCellProps
  };
}
// @ts-ignore
const $b5142692fb624b9607c053967ad2aae7$var$intlMessages = {
  "ar-AE": _babelRuntimeHelpersEsmInteropRequireDefault($eeb22d73391416261d5896c11e3d50e$exports).default,
  "bg-BG": _babelRuntimeHelpersEsmInteropRequireDefault($fa0ca9814ea3b12fba24314370$exports).default,
  "cs-CZ": _babelRuntimeHelpersEsmInteropRequireDefault($b80ce4b4c86bf3ffea578b4830e9bd5b$exports).default,
  "da-DK": _babelRuntimeHelpersEsmInteropRequireDefault($f8703fccb3f936bbb6d4446343295bc$exports).default,
  "de-DE": _babelRuntimeHelpersEsmInteropRequireDefault($a1a2d26509424350c19569463ac338$exports).default,
  "el-GR": _babelRuntimeHelpersEsmInteropRequireDefault($bec6f1ec38b0850d030a38bcf7db$exports).default,
  "en-US": _babelRuntimeHelpersEsmInteropRequireDefault($d500688bbd18d209e8dc63a4586858a1$exports).default,
  "es-ES": _babelRuntimeHelpersEsmInteropRequireDefault($e20050aa18c4f5920be25586b9$exports).default,
  "et-EE": _babelRuntimeHelpersEsmInteropRequireDefault($f4962b42f94764add77fdce85fa673e$exports).default,
  "fi-FI": _babelRuntimeHelpersEsmInteropRequireDefault($df17269a3e52e7316d1e1d297d12d66a$exports).default,
  "fr-FR": _babelRuntimeHelpersEsmInteropRequireDefault($e82ea2755617047da4773a734e02b$exports).default,
  "he-IL": _babelRuntimeHelpersEsmInteropRequireDefault($b1608dad8de71190a5ad2359bf9e33$exports).default,
  "hr-HR": _babelRuntimeHelpersEsmInteropRequireDefault($eba9927d54a5f380c7f03b78d05786aa$exports).default,
  "hu-HU": _babelRuntimeHelpersEsmInteropRequireDefault($cb0b1adc37bae4af50793b778e2108a6$exports).default,
  "it-IT": _babelRuntimeHelpersEsmInteropRequireDefault($afb077696550f3b7e0dcee652c2814ed$exports).default,
  "ja-JP": _babelRuntimeHelpersEsmInteropRequireDefault($bf0d1bbc15981ecf1d7062dedf93c2$exports).default,
  "ko-KR": _babelRuntimeHelpersEsmInteropRequireDefault($dc136dabff22b6b7a44de4fb587f1a11$exports).default,
  "lt-LT": _babelRuntimeHelpersEsmInteropRequireDefault($fc42de8ccef0faf18e4367afc6b7113$exports).default,
  "lv-LV": _babelRuntimeHelpersEsmInteropRequireDefault($b865ab10f15e1da88c3a3a684709f7$exports).default,
  "nb-NO": _babelRuntimeHelpersEsmInteropRequireDefault($c7866351d85f757b0f58566bf2c68748$exports).default,
  "nl-NL": _babelRuntimeHelpersEsmInteropRequireDefault($df753aa2fbc2a27fbf427886dd55155$exports).default,
  "pl-PL": _babelRuntimeHelpersEsmInteropRequireDefault($a79109898fc21f9f1ee17a9$exports).default,
  "pt-BR": _babelRuntimeHelpersEsmInteropRequireDefault($c5906e4f561b7b47a7004651d0d55ea$exports).default,
  "pt-PT": _babelRuntimeHelpersEsmInteropRequireDefault($fe13a3ddbc2699563319ab6e208dd9$exports).default,
  "ro-RO": _babelRuntimeHelpersEsmInteropRequireDefault($f61b1759648a2ce080048699cf77$exports).default,
  "ru-RU": _babelRuntimeHelpersEsmInteropRequireDefault($dddc1f59faf50dd794c3728b6f6a491$exports).default,
  "sk-SK": _babelRuntimeHelpersEsmInteropRequireDefault($fb47d7d560830a4fcf06abc651a18141$exports).default,
  "sl-SI": _babelRuntimeHelpersEsmInteropRequireDefault($b4a15520baa1794862d1bad05b5e4e34$exports).default,
  "sr-SP": _babelRuntimeHelpersEsmInteropRequireDefault($a3b85c35d8db74bade6cb378eed15$exports).default,
  "sv-SE": _babelRuntimeHelpersEsmInteropRequireDefault($abee331c4b5db2f7f481965f4b64ce$exports).default,
  "tr-TR": _babelRuntimeHelpersEsmInteropRequireDefault($afaac376a1c1615a63ade428820f04bd$exports).default,
  "uk-UA": _babelRuntimeHelpersEsmInteropRequireDefault($d9b08bc61b03f2138ed9b56aa161f0a3$exports).default,
  "zh-CN": _babelRuntimeHelpersEsmInteropRequireDefault($a20d09c83504027698611a275ce1$exports).default,
  "zh-TW": _babelRuntimeHelpersEsmInteropRequireDefault($c03eb0fa5ad03617e9f10edd7277$exports).default
};

/**
 * Provides the behavior and accessibility implementation for a selection checkbox in a table.
 * @param props - Props for the selection checkbox.
 * @param state - State of the table, as returned by `useTableState`.
 */
export function useTableSelectionCheckbox(props, state) {
  let {
    key
  } = props;
  const {
    checkboxProps
  } = useGridSelectionCheckbox(props, state);
  return {
    checkboxProps: _babelRuntimeHelpersEsmExtends({}, checkboxProps, {
      'aria-labelledby': checkboxProps.id + " " + $fd8271485d8e52f870169aca977a9c1$export$getRowLabelledBy(state, key)
    })
  };
}
/**
 * Provides the behavior and accessibility implementation for the select all checkbox in a table.
 * @param props - Props for the select all checkbox.
 * @param state - State of the table, as returned by `useTableState`.
 */

export function useTableSelectAllCheckbox(state) {
  let {
    isEmpty,
    isSelectAll,
    selectionMode
  } = state.selectionManager;
  const formatMessage = useMessageFormatter($b5142692fb624b9607c053967ad2aae7$var$intlMessages);
  return {
    checkboxProps: {
      'aria-label': formatMessage(selectionMode === 'single' ? 'select' : 'selectAll'),
      isSelected: isSelectAll,
      isDisabled: selectionMode !== 'multiple',
      isIndeterminate: !isEmpty && !isSelectAll,
      onChange: () => state.selectionManager.toggleSelectAll()
    }
  };
}
//# sourceMappingURL=module.js.map
